name: test workflow du projet
run-name: ${{ github.actor }} is learning GitHub Actions
on: [push]
jobs:

  build:
    runs-on: ubuntu-22.04 #Mettre ubuntu-latest revient au même
    steps:
      - uses: actions/checkout@v3
      #CACHE
      - uses: actions/cache@v3
        id: npm-cache # use this to check for `cache-hit` ==> if: steps.npm-cache.outputs.cache-hit != 'true'
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install depedencies and build
        run: |
          npm install
          npm run build

  build-docker-images-developpement:
    needs: build
    if: github.ref == 'refs/heads/develop'
    environment:
      name: developpement
      url: http://54.89.247.103/
    runs-on: ubuntu-22.04 #Mettre ubuntu-latest revient au même
    permissions:
      contents: read
      packages: write
    steps:
      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - name: Build and Push Docker images to Github Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/next/Dockerfile
          push: true
          tags: ghcr.io/plumpqueen/devopsrepo/nodejs-my-website:dev

  build-docker-images-production:
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
      url: http://54.89.247.103/
    runs-on: ubuntu-22.04 #Mettre ubuntu-latest revient au même
    permissions:
      contents: read
      packages: write
    steps:
      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v3
      - name: Build and Push Docker images to Github Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/next/Dockerfile
          push: true
          tags: ghcr.io/plumpqueen/devopsrepo/nodejs-my-website:dev
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm run e2e:headless
      #ARTIFACT
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: e2e-tests
          path: cypress/videos

  deploy-dev:
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: developpement_environment
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{secrets.SSH_KEY}}
      - run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST}} "\
          cd DevOpsRepo && \
          git pull && \
          npm install && \
          npm run build && \
          pm2 restart all"

  deploy-prod:
    runs-on: ubuntu-latest
    needs: [test]
    environment:
      name: production_environment
      url: https://54.89.247.103:3000
    permissions:
      contents: read
      packages: write
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
      - name: 
        with:
          ssh-private-key: ${{secrets.SSH_KEY}}
      - run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST}} "\
          cd DevOpsRepo && \
          git pull && \
          npm install && \
          npm run build && \
          pm2 restart all"
#DOCKER 
#  login-build-push-docker:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#    steps:
#      - uses: actions/checkout@v3
#      - name: Login to Github Container regestry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{github.actor}}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build and push
#        uses: docker/build-push-action@v4
#        with:
#          push: true
#          tags: ghcr.io/plumpqueen/devopsrepo/nodejs-my-website:latest
#
#  deploy-docker:
#    runs-on: ubuntu-latest
#    needs: login-build-push-docker
#    steps:
#      - uses: webfactory/ssh-agent@v0.8.0
#        with:
#          ssh-private-key: ${{secrets.SSH_KEY}}
#      - run: |
#          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST}} "\
#          sudo docker pull ghcr.io/plumpqueen/nodejs-my-website:latest && \
#          sudo docker stop next && \
#          sudo docker rn next && \
#          sudo docker run -d -p 3000:3000 --name next ghcr.io/plumpqueen/nodejs-my-website:latest"
#        #Pour un repo privé, il faura fair un docker login
#
#  build-docker:
#      context: .
#      dockerfile: ./docker/next/Dockerfile